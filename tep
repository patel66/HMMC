
[1mFrom:[0m /vagrant/hccmphilstuff/HMMC/vendor/bundle/gems/activerecord-4.1.1/lib/active_record/attribute_methods/read.rb @ line 110 ActiveRecord::AttributeMethods::Read#read_attribute:

    [1;34m107[0m: [32mdef[0m [1;34mread_attribute[0m(attr_name)
    [1;34m108[0m:   [1;30m# If it's cached, just return it[0m
    [1;34m109[0m:   [1;30m# We use #[] first as a perf optimization for non-nil values. See https://gist.github.com/jonleighton/3552829.[0m
 => [1;34m110[0m:   name = attr_name.to_s
    [1;34m111[0m:   @attributes_cache[name] || @attributes_cache.fetch(name) {
    [1;34m112[0m:     column = @column_types_override[name] [32mif[0m @column_types_override
    [1;34m113[0m:     column ||= @column_types[name]
    [1;34m114[0m: 
    [1;34m115[0m:     [32mreturn[0m @attributes.fetch(name) {
    [1;34m116[0m:       [32mif[0m name == [31m[1;31m'[0m[31mid[1;31m'[0m[31m[0m && [1;36mself[0m.class.primary_key != name
    [1;34m117[0m:         read_attribute([1;36mself[0m.class.primary_key)
    [1;34m118[0m:       [32mend[0m
    [1;34m119[0m:     } [32munless[0m column
    [1;34m120[0m: 
    [1;34m121[0m:     value = @attributes.fetch(name) {
    [1;34m122[0m:       [32mreturn[0m block_given? ? [32myield[0m(name) : [1;36mnil[0m
    [1;34m123[0m:     }
    [1;34m124[0m: 
    [1;34m125[0m:     [32mif[0m [1;36mself[0m.class.cache_attribute?(name)
    [1;34m126[0m:       @attributes_cache[name] = column.type_cast(value)
    [1;34m127[0m:     [32melse[0m
    [1;34m128[0m:       column.type_cast value
    [1;34m129[0m:     [32mend[0m
    [1;34m130[0m:   }
    [1;34m131[0m: [32mend[0m

